
SYSTEMC_PREFIX = /nil/local/breytner/systemc-2.3.3
EIGEN_INC_DIR = /nil/local/breytner/eigen_install/
TBB_INCLUDE_PATH = /usr/include/tbb/
BOOST_INCLUDE_PATH = /opt/boost/include/
BOOST_LIB_PATH = /opt/boost/lib/

TARGET_ARCH     = $(shell uname -m | sed -e 's/x86_64.*/linux64/' -e 's/i.86.*/linux/')

SYSTEMC_INC_DIR = $(SYSTEMC_PREFIX)/include
SYSTEMC_LIB_DIR = $(SYSTEMC_PREFIX)/lib
SYSTEMC_AMS_INC_DIR = $(SYSTEMC_AMS_PREFIX)/include
SYSTEMC_AMS_LIB_DIR = $(SYSTEMC_AMS_PREFIX)/lib


# LIBTOOL Setting
SHELL           = /bin/bash
LIBTOOL_DIR     = /usr/bin
LIBTOOL         = $(SHELL) $(LIBTOOL_DIR)/libtool

COMMON_INC_PATH = ../../common/include

CXX             = g++
GCC             = gcc
LD              = g++

FLAGS           = -g -Wall -Wpedantic -Wno-long-long -O3 \
                 -DSC_INCLUDE_DYNAMIC_PROCESSES -Wno-deprecated-declarations \
				 -I$(SYSTEMC_INC_DIR) -I$(TBB_INCLUDE_PATH) -I$(BOOST_INCLUDE_PATH)  -I$(EIGEN_INC_DIR) \
				 -I$(SYSTEMC_AMS_INC_DIR) -L$(BOOST_LIB_PATH) \
				-std=gnu++11

SYNC_LAYER_PATH = ../../../layer/

INC = -I../common/ -I$(SYNC_LAYER_PATH)/include


CPPFLAGS  = -I$(SYSTEMC_INC_DIR) 
CPPFLAGS += -I$(SYSTEMC_AMS_INC_DIR)  -I$(TBB_INCLUDE_PATH) -I$(BOOST_INCLUDE_PATH) -I$(EIGEN_INC_DIR) -I$(COMMON_INC_PATH)
CPPFLAGS += $(INC) -L$(BOOST_LIB_PATH)
CPPFLAGS += -MMD -MP -MF $(basename $@).d
CXXFLAGS = -std=gnu++11 -g -Wall -Wpedantic -Wno-long-long  -O3 \
            -DSC_INCLUDE_DYNAMIC_PROCESSES -Wno-deprecated-declarations

LD = $(CXX)
SC_LIB = -L$(SYSTEMC_LIB_DIR) -L$(SYSTEMC_AMS_LIB_DIR) -lsystemc -lsystemc-ams -lm  
LDFLAGS = $(CXXFLAGS)
LDLIBS +=  $(SC_LIB) -pthread
LDLIBS += -ltbb #-ltbbmalloc -ltbbmalloc_proxy  



SRCS = $(wildcard *.cpp)
OBJS=$(SRCS:.cpp=.o)

OBJS = $(SRCS:%.cpp=%.o)
DEPS = $(SRCS:%.cpp=%.d)

.PHONY: $(MODULE)
$(MODULE): $(TARGET)

.PHONY: clean
clean:
	$(RM) *.d *.o $(TARGET)

%.o: %.cpp $(filter-out %.d, $(MAKEFILE_LIST))
	$(CXX) -c $< -o $@ $(CPPFLAGS) $(CXXFLAGS) $(CXXEXTRAFLAGS)

# "user-friendly" output of make for commands the students may not
# know:
%.a: $(OBJS)
	@echo "[$(MODULE)] creating static lib $@..."
	$(AT)ar cru $@ $^
	$(AT)ranlib $@

%.gch: % $(filter-out %.d, $(MAKEFILE_LIST))
	@echo "[$(MODULE)] pre-compiling $<..."
	$(AT)$(RM) $@
	$(AT)$(CXX) -x c++-header -c $< -o $@ $(CPPFLAGS) $(CXXFLAGS) $(CXXEXTRAFLAGS)

%.d: ;

$(OBJS) : $(COMMON_INC_PATH)/*.h

# Include dependency files
-include $(DEPS)