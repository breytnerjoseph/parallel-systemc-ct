#ifndef ENGINE_TORQUE_CALCULATOR_H
#define ENGINE_TORQUE_CALCULATOR_H

#include <tuple>
#include <vector>

#include "look_up_table_2d.h"


class EngineTorqueCalculator{
    public:    
        EngineTorqueCalculator();

        double get_torque(double ne, double throttle) const; 

    private:
        LookUpTable2D interp_te_tbl;

        std::vector<double> throttle;
        std::vector<double> ne; 

        double _te_table[10][11] = {
            {-54.23272,	    -59.655992,	    -66.435082,	-71.858354,	-77.281626,	-82.704898,	-88.12817,	-94.90726,	-100.330532, -105.753804, -111.177076},
            {291.50087,	    158.630706,	    115.24453,	89.483988,	59.655992,	39.318722,	13.55818,	-2.711636,	-17.625634,	-29.827996,	-43.386176},
            {332.17541,	    282.010144,	    241.335604,	200.661064,	165.409796,	141.005072,	115.24453,	89.483988,	65.079264,	44.741994,	24.404724},
            {357.935952,	352.51268,	    326.752138,	296.924142,	261.672874,	226.421606,	206.084336,	180.323794,	161.342342,	130.158528,	115.24453},
            {357.935952,	378.273222,	    382.340676,	372.84995,	352.51268,	322.684684,	302.347414,	282.010144,	256.249602,	231.844878,	206.084336},
            {362.003406,	393.18722,	    397.254674,	402.677946,	393.18722,	372.84995,	352.51268,	347.089408,	317.261412,	287.433416,	261.672874},
            {362.003406,	402.677946,	    413.52449,	413.52449,	413.52449,	408.101218,	397.254674,	382.340676,	362.003406,	337.598682,	306.414868},
            {362.003406,	408.101218,	    417.591944,	423.015216,	432.505942,	437.929214,	432.505942,	428.438488,	402.677946,	378.273222,	343.021954},
            {362.003406,	408.101218,	    423.015216,	432.505942,	443.352486,	443.352486,	443.352486,	443.352486,	423.015216,	397.254674,	362.003406},
            {362.003406,	408.101218,	    423.015216,	432.505942,	443.352486,	452.843212,	452.843212,	452.843212,	432.505942,	413.52449,	372.84995}
        }; 

        std::vector<double> get_ne_breakpoints() const;
        std::vector<double> get_throttle_breakpoints() const;
};

#endif